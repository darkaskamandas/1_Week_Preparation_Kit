using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'caesarCipher' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. INTEGER k
     */

    public static string caesarCipher(string s, int k)
    {
        int offset = k % 26;
        
        string ciphered = "";
        for(int i = 0; i < s.Count(); i++){
            char toCipher = s[i];
            int asciiVal = (int)toCipher;

            if(asciiVal > 122 || asciiVal < 65 || (asciiVal > 90 && asciiVal < 97)){
                ciphered += s[i];
                continue;
            }
                        
            char cipheredChar = (char)(toCipher + offset);
            int cipheredAscii = (int)cipheredChar;
            
            if((asciiVal >= 65 && asciiVal <= 90) && cipheredAscii > 90 || (asciiVal >= 97 && asciiVal <= 122) && cipheredAscii > 122){
                cipheredChar = (char)(cipheredChar - 26);
            }
            

            ciphered += cipheredChar;
        }
        
        return ciphered;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine().Trim());

        string s = Console.ReadLine();

        int k = Convert.ToInt32(Console.ReadLine().Trim());

        string result = Result.caesarCipher(s, k);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
