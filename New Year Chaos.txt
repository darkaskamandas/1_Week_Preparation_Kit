using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'minimumBribes' function below.
     *
     * The function accepts INTEGER_ARRAY q as parameter.
     */

    public static void minimumBribes(List<int> q)
    {
        //1 2 5 3 7 8 6 4
        //1 2 3 4 5 6 7 8
        
        //0 1 2 3 4 5 6 7
        //0 1 3 7 2 6 4 5 
        
        int n=q.Count;
        int[] order=new int[n];
        for(int i=0;i<n;i++){
           order[q[i]-1]=i;
        }
        
        int swap=limitInsertionSort(order , 2);
        Console.WriteLine(swap!=-1?swap+"":"Too chaotic");
        
    }
    
    public static int limitInsertionSort(int[] arr, int limit)
    {
            int swap = 0;
            int n = arr.Length;
            for (int i = 1; i < n; i++)
            {
                if (arr[i - 1] > arr[i])
                {
                    int temp = 0;
                    int k = i;
                    while (k > 0 && arr[k] < arr[k - 1])
                    {
                        int t = arr[k];
                        arr[k] = arr[k - 1];
                        arr[k - 1] = t;
                        k--;
                        temp++;
                    }
                    if (temp > limit) return -1;
                    else swap += temp;
                }
            }
            return swap;

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        int t = Convert.ToInt32(Console.ReadLine().Trim());

        for (int tItr = 0; tItr < t; tItr++)
        {
            int n = Convert.ToInt32(Console.ReadLine().Trim());

            List<int> q = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(qTemp => Convert.ToInt32(qTemp)).ToList();

            Result.minimumBribes(q);
        }
    }
}
